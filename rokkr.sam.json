{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Tenzing-repo SAM template.",
    "Parameters": {
        "CodeKey":{
            "Type":"String",
            "Description":"The S3 key of the new lambda code."
        },
        "AuthEnabled":{
            "Type":"String",
            "AllowedValues" : ["TRUE","FALSE"],
            "Description":"Whether or not the repo requires auth.",
            "Default":"FALSE"
        },
        "DebugEnabled":{
            "Type":"String",
            "AllowedValues" : ["TRUE","FALSE"],
            "Description":"Whether or not to enable debug mode.",
            "Default":"FALSE"
        }
    },
    "Resources": {
        "ApiGatewayPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudwatch:PutMetricData"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": "apigateway:GET",
                            "Resource": "arn:aws:apigateway:*::/*"
                        }
                    ]
                }
            }
        },
        "S3Policy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "s3:*",
                            "Resource": [
                                { "Fn::GetAtt" : [ "RepoBucket", "Arn" ] },
                                { "Fn::Join" : [ "/", [ { "Fn::GetAtt" : [ "RepoBucket", "Arn" ] }, "*" ] ] }
                            ]
                        }
                    ]
                }
            }
        },
        "Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    {"Ref": "ApiGatewayPolicy"},
                    {"Ref": "S3Policy"}
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "Function": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Description": "",
                "Role": {
                    "Fn::GetAtt": [
                        "Role",
                        "Arn"
                    ]
                },
                "Handler": "handlers.dispatcher",
                "Runtime": "python3.6",
                "CodeUri": {
                    "Bucket": {"Ref":"CodeBucket"},
                    "Key": {"Ref":"CodeKey"}
                },
                "Timeout": 10,
                "Environment":{
                    "Variables": {
                        "REPO_BUCKET":{"Ref":"RepoBucket"},
                        "AUTH_ENABLED":{"Ref":"AuthEnabled"},
                        "DEBUG_ENABLED":{"Ref":"DebugEnabled"}
                    }
                },
                "Events": {
                    "get": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/{proxy+}",
                            "Method": "get"
                        }
                    },
                    "post": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/{proxy+}",
                            "Method": "post"
                        }
                    }
                }
            }
        },
        "ProxylessFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Description": "",
                "Role": {
                    "Fn::GetAtt": [
                        "Role",
                        "Arn"
                    ]
                },
                "Handler": "handlers.dispatcher",
                "Runtime": "python3.6",
                "CodeUri": {
                    "Bucket": {"Ref":"CodeBucket"},
                    "Key": {"Ref":"CodeKey"}
                },
                "Timeout": 10,
                "Environment":{
                    "Variables": {
                        "REPO_BUCKET":{"Ref":"RepoBucket"},
                        "AUTH_ENABLED":{"Ref":"AuthEnabled"},
                        "DEBUG_ENABLED":{"Ref":"DebugEnabled"}
                    }
                },
                "Events": {
                    "get": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/",
                            "Method": "get"
                        }
                    },
                    "post": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/",
                            "Method": "post"
                        }
                    }
                }
            }
        },
        "RepoBucket" : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
                "AccessControl" : "Private"
            }
        },
        "CodeBucket": {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {}
        }
    },
    "Outputs": {
        "CodeBucket": {
            "Value": {
                "Ref": "CodeBucket"
            },
            "Description": "Bucket in which lambda bundles will be stored."
        }
    }
}
